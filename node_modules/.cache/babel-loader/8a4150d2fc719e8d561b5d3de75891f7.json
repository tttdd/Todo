{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corni\\\\WebstormProjects\\\\todo\\\\src\\\\UI\\\\content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Tasks from \"./Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Сontent = props => {\n  _s();\n\n  const Main = styled.main`\n        width: 60%;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 20px;\n    `;\n  const Input = styled.input`\n          padding: 15px;\n          box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n          width: 80%;\n    `;\n  const MainTask = styled.div`\n      display: flex;\n      justify-content: center;\n      margin: 20px 0px;\n    `;\n  let inputRel = /*#__PURE__*/React.createRef();\n  let keys = Object.keys(localStorage);\n\n  let onKeyPressHandler = event => {\n    if (event.keyCode === 13) {\n      add_new_Task();\n      change_value(\"\");\n    }\n  };\n\n  let [editMode, setEditMode] = useState(false);\n  let [task, editTask] = useState(new_input_value);\n\n  const activateMode = () => {\n    console.log(\"Я тут\");\n    setEditMode(true);\n  };\n\n  const deactivateMode = () => {\n    setEditMode(false);\n  };\n\n  const onStatusChange = e => {\n    editTask(e.currentTarget.value);\n    localStorage.setItem(props.k.toString(), task);\n  };\n\n  let [new_input_value, change_value] = useState(\"\");\n\n  let set_new_val = e => {\n    change_value(e.currentTarget.value);\n  };\n\n  let add_new_Task = () => {\n    localStorage.setItem(localStorage.length.toString(), new_input_value);\n  };\n\n  let local_clear = () => {\n    localStorage.clear();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Add Task....\",\n      ref: inputRel,\n      autoFocus: true,\n      onChange: set_new_val,\n      value: new_input_value,\n      onKeyDown: onKeyPressHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), keys.length != 0 ? keys.map(key => {\n      return /*#__PURE__*/_jsxDEV(Main, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), !editMode && /*#__PURE__*/_jsxDEV(\"span\", {\n          onDoubleClick: activateMode,\n          children: new_input_value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 22\n        }, this), editMode && /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onStatusChange,\n          autoFocus: true,\n          onBlur: deactivateMode,\n          value: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 54\n      }, this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Сontent, \"D4MHsiv0zensmLEGCaSAlg51LaE=\");\n\nexport default Сontent;","map":{"version":3,"sources":["C:/Users/corni/WebstormProjects/todo/src/UI/content.js"],"names":["React","useState","styled","Tasks","Сontent","props","Main","main","Input","input","MainTask","div","inputRel","createRef","keys","Object","localStorage","onKeyPressHandler","event","keyCode","add_new_Task","change_value","editMode","setEditMode","task","editTask","new_input_value","activateMode","console","log","deactivateMode","onStatusChange","e","currentTarget","value","setItem","k","toString","set_new_val","length","local_clear","clear","map","key"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Tasks from \"./Tasks\";\r\nconst Сontent=(props)=>{\r\n    const Main=styled.main`\r\n        width: 60%;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        margin-top: 20px;\r\n    `;\r\n    const Input=styled.input`\r\n          padding: 15px;\r\n          box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\r\n          width: 80%;\r\n    `;\r\n    const MainTask=styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n      margin: 20px 0px;\r\n    `;\r\n    let inputRel=React.createRef()\r\n    let keys=Object.keys(localStorage)\r\n\r\n    let onKeyPressHandler=(event)=>{\r\n        if (event.keyCode === 13) {\r\n            add_new_Task()\r\n            change_value(\"\")\r\n        }\r\n    }\r\n\r\n    let [editMode,setEditMode]=useState(false)\r\n\r\n    let [task,editTask]=useState(new_input_value)\r\n\r\n    const activateMode=()=>{\r\n        console.log(\"Я тут\")\r\n        setEditMode(true)\r\n    }\r\n    const deactivateMode=()=>{\r\n        setEditMode(false)\r\n    }\r\n    const onStatusChange=(e)=>{\r\n        editTask(e.currentTarget.value)\r\n        localStorage.setItem(props.k.toString(),task)\r\n    }\r\n\r\n    let [new_input_value,change_value]=useState(\"\")\r\n\r\n\r\n    let set_new_val=(e)=>{\r\n        change_value(e.currentTarget.value)\r\n    }\r\n\r\n    let add_new_Task=()=>{\r\n        localStorage.setItem(localStorage.length.toString(),new_input_value)\r\n    }\r\n    let local_clear=()=>{\r\n        localStorage.clear()\r\n    }\r\n    return(\r\n        <Main>\r\n            <Input placeholder={\"Add Task....\"} ref={inputRel}  autoFocus={true} onChange={set_new_val} value={new_input_value} onKeyDown={onKeyPressHandler}/>\r\n\r\n            {keys.length!=0 ? keys.map(key=>{return (<Main>\r\n                <input type=\"checkbox\"></input>\r\n                {!editMode &&\r\n                     <span onDoubleClick={activateMode}>{new_input_value}</span>\r\n                }\r\n                {editMode &&\r\n                     <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={task}></input>\r\n                }\r\n            </Main>)}):null}\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default Сontent"]},"metadata":{},"sourceType":"module"}