{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corni\\\\WebstormProjects\\\\todo\\\\src\\\\UI\\\\Tasks.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { FormControl } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport Basket from \"./img/basket.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  _s();\n\n  const Main = styled.div`\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: 20px 0px;\n    `;\n  let [editMode, setEditMode] = useState(false);\n  let [task, editTask] = useState(props.name);\n  let [check_status, editStatus] = useState(false);\n  let [life, editLife] = useState(true);\n  let checkLink = /*#__PURE__*/React.createRef();\n\n  const checkToggle = e => {\n    if (check_status == false) {\n      e.currentTarget.checked = true;\n      editStatus(true);\n    } else {\n      e.currentTarget.checked = false;\n      editStatus(false);\n    }\n  };\n\n  const activateMode = () => {\n    if (checkLink.current.checked) setEditMode(true);\n  };\n\n  const deactivateMode = () => {\n    setEditMode(false);\n  };\n\n  const onStatusChange = e => {\n    editTask(e.currentTarget.value);\n    localStorage.setItem(props.k.toString(), task);\n  };\n\n  const removeTask = e => {\n    if (checkLink.current.checked) {\n      localStorage.removeItem(e.currentTarget.title);\n      editLife(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: life ? /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: check_status,\n        onChange: checkToggle,\n        ref: checkLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), !editMode && /*#__PURE__*/_jsxDEV(\"span\", {\n        onDoubleClick: activateMode,\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), editMode && /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onStatusChange,\n        autoFocus: true,\n        onBlur: deactivateMode,\n        value: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        src: Basket,\n        onClick: removeTask,\n        title: props.k\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Tasks, \"zF2iGLmWivMN61y6+paDNDSgoVY=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/corni/WebstormProjects/todo/src/UI/Tasks.js"],"names":["useState","React","styled","InputGroup","FormControl","Image","Basket","Tasks","props","Main","div","editMode","setEditMode","task","editTask","name","check_status","editStatus","life","editLife","checkLink","createRef","checkToggle","e","currentTarget","checked","activateMode","current","deactivateMode","onStatusChange","value","localStorage","setItem","k","toString","removeTask","removeItem","title"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AACA,MAAMC,KAAK,GAAEC,KAAD,IAAS;AAAA;;AACjB,QAAMC,IAAI,GAACP,MAAM,CAACQ,GAAI;AAC1B;AACA;AACA;AACA;AACA,KALI;AAOA,MAAI,CAACC,QAAD,EAAUC,WAAV,IAAuBZ,QAAQ,CAAC,KAAD,CAAnC;AACA,MAAI,CAACa,IAAD,EAAMC,QAAN,IAAgBd,QAAQ,CAACQ,KAAK,CAACO,IAAP,CAA5B;AAEA,MAAI,CAACC,YAAD,EAAcC,UAAd,IAA0BjB,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAACkB,IAAD,EAAMC,QAAN,IAAgBnB,QAAQ,CAAC,IAAD,CAA5B;AAEA,MAAIoB,SAAS,gBAACnB,KAAK,CAACoB,SAAN,EAAd;;AAEA,QAAMC,WAAW,GAAEC,CAAD,IAAK;AACnB,QAAIP,YAAY,IAAE,KAAlB,EAAyB;AACtBO,MAAAA,CAAC,CAACC,aAAF,CAAgBC,OAAhB,GAAwB,IAAxB;AACCR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAHD,MAIK;AACDM,MAAAA,CAAC,CAACC,aAAF,CAAgBC,OAAhB,GAAwB,KAAxB;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GATD;;AAUA,QAAMS,YAAY,GAAC,MAAI;AACnB,QAAIN,SAAS,CAACO,OAAV,CAAkBF,OAAtB,EACIb,WAAW,CAAC,IAAD,CAAX;AACP,GAHD;;AAIA,QAAMgB,cAAc,GAAC,MAAI;AACrBhB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAGA,QAAMiB,cAAc,GAAEN,CAAD,IAAK;AACtBT,IAAAA,QAAQ,CAACS,CAAC,CAACC,aAAF,CAAgBM,KAAjB,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqBxB,KAAK,CAACyB,CAAN,CAAQC,QAAR,EAArB,EAAwCrB,IAAxC;AACH,GAHD;;AAIA,QAAMsB,UAAU,GAAEZ,CAAD,IAAK;AAClB,QAAIH,SAAS,CAACO,OAAV,CAAkBF,OAAtB,EAA+B;AAC3BM,MAAAA,YAAY,CAACK,UAAb,CAAwBb,CAAC,CAACC,aAAF,CAAgBa,KAAxC;AACAlB,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ,GALD;;AAMA,sBACQ;AAAA,cACMD,IAAI,gBAAC,QAAC,IAAD;AAAA,8BACH;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEF,YAAhC;AAA8C,QAAA,QAAQ,EAAEM,WAAxD;AAAqE,QAAA,GAAG,EAAEF;AAA1E;AAAA;AAAA;AAAA;AAAA,cADG,EAEN,CAACT,QAAD,iBACG;AAAM,QAAA,aAAa,EAAEe,YAArB;AAAA,kBAAoCb;AAApC;AAAA;AAAA;AAAA;AAAA,cAHG,EAKNF,QAAQ,iBACL;AAAO,QAAA,QAAQ,EAAEkB,cAAjB;AAAiC,QAAA,SAAS,EAAE,IAA5C;AAAkD,QAAA,MAAM,EAAED,cAA1D;AAA0E,QAAA,KAAK,EAAEf;AAAjF;AAAA;AAAA;AAAA;AAAA,cANG,eAQH,QAAC,KAAD;AAAO,QAAA,GAAG,EAAEP,MAAZ;AAAoB,QAAA,OAAO,EAAE6B,UAA7B;AAAyC,QAAA,KAAK,EAAE3B,KAAK,CAACyB;AAAtD;AAAA;AAAA;AAAA;AAAA,cARG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAD,gBASE;AAAA;AAAA;AAAA;AAAA;AAVZ;AAAA;AAAA;AAAA;AAAA,UADR;AAcH,CAzDD;;GAAM1B,K;;KAAAA,K;AA0DN,eAAeA,KAAf","sourcesContent":["import {useState} from \"react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport {FormControl} from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Basket from \"./img/basket.png\"\r\nconst Tasks=(props)=>{\r\n    const Main=styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin: 20px 0px;\r\n    `;\r\n\r\n    let [editMode,setEditMode]=useState(false)\r\n    let [task,editTask]=useState(props.name)\r\n\r\n    let [check_status,editStatus]=useState(false)\r\n    let [life,editLife]=useState(true)\r\n\r\n    let checkLink=React.createRef()\r\n\r\n    const checkToggle=(e)=>{\r\n        if (check_status==false) {\r\n           e.currentTarget.checked=true\r\n            editStatus(true)\r\n        }\r\n        else {\r\n            e.currentTarget.checked=false\r\n            editStatus(false)\r\n        }\r\n    }\r\n    const activateMode=()=>{\r\n        if (checkLink.current.checked)\r\n            setEditMode(true)\r\n    }\r\n    const deactivateMode=()=>{\r\n        setEditMode(false)\r\n    }\r\n    const onStatusChange=(e)=>{\r\n        editTask(e.currentTarget.value)\r\n        localStorage.setItem(props.k.toString(),task)\r\n    }\r\n    const removeTask=(e)=>{\r\n        if (checkLink.current.checked) {\r\n            localStorage.removeItem(e.currentTarget.title)\r\n            editLife(false)\r\n        }\r\n    }\r\n    return(\r\n            <div>\r\n                { life?<Main>\r\n                    <input type=\"checkbox\" checked={check_status} onChange={checkToggle} ref={checkLink}></input>\r\n                {!editMode &&\r\n                    <span onDoubleClick={activateMode}>{task}</span>\r\n                }\r\n                {editMode &&\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={task}></input>\r\n                }\r\n                    <Image src={Basket} onClick={removeTask} title={props.k}></Image>\r\n                </Main>:<div></div>}\r\n            </div>\r\n    )\r\n}\r\nexport default Tasks"]},"metadata":{},"sourceType":"module"}