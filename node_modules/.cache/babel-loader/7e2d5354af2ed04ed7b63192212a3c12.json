{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corni\\\\WebstormProjects\\\\todo\\\\src\\\\UI\\\\content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Tasks from \"./Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Сontent = props => {\n  _s();\n\n  const Main = styled.main`\n        width: 60%;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 20px;\n    `;\n  const Input = styled.input`\n          padding: 15px;\n          box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n          width: 80%;\n    `;\n  let inputRel = /*#__PURE__*/React.createRef();\n  let keys = Object.keys(localStorage);\n  let [new_input_value, change_value] = useState(\"add Task\");\n\n  let set_new_val = e => {\n    change_value(e.currentTarget.value);\n  };\n\n  let add_new_Task = () => {\n    localStorage.setItem(localStorage.length.toString(), new_input_value);\n  };\n\n  let local_clear = () => {\n    localStorage.clear();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Add Task....\",\n      ref: inputRel,\n      autoFocus: true,\n      onChange: set_new_val,\n      value: new_input_value,\n      onBlur: add_new_Task()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), keys.length != 0 ? keys.map(key => {\n      return /*#__PURE__*/_jsxDEV(Tasks, {\n        name: localStorage.getItem(key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this);\n    }) : null, local_clear()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Сontent, \"F5dxgRQj4yg6o1Xl1PDF2e35E8w=\");\n\nexport default Сontent;","map":{"version":3,"sources":["C:/Users/corni/WebstormProjects/todo/src/UI/content.js"],"names":["React","useState","styled","Tasks","Сontent","props","Main","main","Input","input","inputRel","createRef","keys","Object","localStorage","new_input_value","change_value","set_new_val","e","currentTarget","value","add_new_Task","setItem","length","toString","local_clear","clear","map","key","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,MAAMC,OAAO,GAAEC,KAAD,IAAS;AAAA;;AACnB,QAAMC,IAAI,GAACJ,MAAM,CAACK,IAAK;AAC3B;AACA;AACA;AACA;AACA,KALI;AAMA,QAAMC,KAAK,GAACN,MAAM,CAACO,KAAM;AAC7B;AACA;AACA;AACA,KAJI;AAKA,MAAIC,QAAQ,gBAACV,KAAK,CAACW,SAAN,EAAb;AACA,MAAIC,IAAI,GAACC,MAAM,CAACD,IAAP,CAAYE,YAAZ,CAAT;AACC,MAAI,CAACC,eAAD,EAAiBC,YAAjB,IAA+Bf,QAAQ,CAAC,UAAD,CAA3C;;AAED,MAAIgB,WAAW,GAAEC,CAAD,IAAK;AACjBF,IAAAA,YAAY,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAZ;AACH,GAFD;;AAGA,MAAIC,YAAY,GAAC,MAAI;AACjBP,IAAAA,YAAY,CAACQ,OAAb,CAAqBR,YAAY,CAACS,MAAb,CAAoBC,QAApB,EAArB,EAAoDT,eAApD;AACH,GAFD;;AAGA,MAAIU,WAAW,GAAC,MAAI;AAChBX,IAAAA,YAAY,CAACY,KAAb;AACH,GAFD;;AAGA,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,WAAW,EAAE,cAApB;AAAoC,MAAA,GAAG,EAAEhB,QAAzC;AAAoD,MAAA,SAAS,EAAE,IAA/D;AAAqE,MAAA,QAAQ,EAAEO,WAA/E;AAA4F,MAAA,KAAK,EAAEF,eAAnG;AAAoH,MAAA,MAAM,EAAEM,YAAY;AAAxI;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKT,IAAI,CAACW,MAAL,IAAa,CAAb,GAAiBX,IAAI,CAACe,GAAL,CAAUC,GAAD,IAAO;AAC9B,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEd,YAAY,CAACe,OAAb,CAAqBD,GAArB;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFiB,CAAjB,GAEE,IALP,EAMKH,WAAW,EANhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAnCD;;GAAMrB,O;;AAqCN,eAAeA,OAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Tasks from \"./Tasks\";\r\nconst Сontent=(props)=>{\r\n    const Main=styled.main`\r\n        width: 60%;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        margin-top: 20px;\r\n    `\r\n    const Input=styled.input`\r\n          padding: 15px;\r\n          box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\r\n          width: 80%;\r\n    `\r\n    let inputRel=React.createRef()\r\n    let keys=Object.keys(localStorage)\r\n     let [new_input_value,change_value]=useState(\"add Task\")\r\n\r\n    let set_new_val=(e)=>{\r\n        change_value(e.currentTarget.value)\r\n    }\r\n    let add_new_Task=()=>{\r\n        localStorage.setItem(localStorage.length.toString(),new_input_value)\r\n    }\r\n    let local_clear=()=>{\r\n        localStorage.clear()\r\n    }\r\n    return(\r\n        <Main>\r\n            <Input placeholder={\"Add Task....\"} ref={inputRel}  autoFocus={true} onChange={set_new_val} value={new_input_value} onBlur={add_new_Task()}/>\r\n\r\n            {keys.length!=0 ? keys.map((key)=>{\r\n                return <Tasks name={localStorage.getItem(key)}></Tasks>\r\n            }):null}\r\n            {local_clear()}\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default Сontent"]},"metadata":{},"sourceType":"module"}