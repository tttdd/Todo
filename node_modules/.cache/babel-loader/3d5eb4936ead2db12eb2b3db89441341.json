{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corni\\\\WebstormProjects\\\\todo\\\\src\\\\UI\\\\Tasks.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { FormControl } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport Basket from \"./img/basket.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  _s();\n\n  const Main = styled.div`\n      display: flex;\n      justify-content: center;\n      margin: 20px 0px;\n      align-items: center;\n    `;\n  let [editMode, setEditMode] = useState(false);\n  let [task, editTask] = useState(props.name);\n  let [check_status, editStatus] = useState(false);\n  let checkLink = /*#__PURE__*/React.createRef();\n\n  const checkToggle = () => {\n    if (checkLink.current.checked) editStatus(false);else editStatus(true);\n  };\n\n  const activateMode = () => {\n    if (checkLink.current.checked) setEditMode(true);\n  };\n\n  const deactivateMode = () => {\n    setEditMode(false);\n  };\n\n  const onStatusChange = e => {\n    editTask(e.currentTarget.value);\n    localStorage.setItem(props.k.toString(), task);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: check_status,\n      onClick: checkToggle,\n      ref: checkLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), !editMode && /*#__PURE__*/_jsxDEV(\"span\", {\n      onDoubleClick: activateMode,\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this), editMode && /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onStatusChange,\n      autoFocus: true,\n      onBlur: deactivateMode,\n      value: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      src: Basket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Tasks, \"+ASxwvjS+/QGXvAC67WqYIL0tCo=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/corni/WebstormProjects/todo/src/UI/Tasks.js"],"names":["useState","React","styled","InputGroup","FormControl","Image","Basket","Tasks","props","Main","div","editMode","setEditMode","task","editTask","name","check_status","editStatus","checkLink","createRef","checkToggle","current","checked","activateMode","deactivateMode","onStatusChange","e","currentTarget","value","localStorage","setItem","k","toString"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AACA,MAAMC,KAAK,GAAEC,KAAD,IAAS;AAAA;;AACjB,QAAMC,IAAI,GAACP,MAAM,CAACQ,GAAI;AAC1B;AACA;AACA;AACA;AACA,KALI;AAOA,MAAI,CAACC,QAAD,EAAUC,WAAV,IAAuBZ,QAAQ,CAAC,KAAD,CAAnC;AACA,MAAI,CAACa,IAAD,EAAMC,QAAN,IAAgBd,QAAQ,CAACQ,KAAK,CAACO,IAAP,CAA5B;AACA,MAAI,CAACC,YAAD,EAAcC,UAAd,IAA0BjB,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAIkB,SAAS,gBAACjB,KAAK,CAACkB,SAAN,EAAd;;AAEA,QAAMC,WAAW,GAAC,MAAI;AAClB,QAAIF,SAAS,CAACG,OAAV,CAAkBC,OAAtB,EACCL,UAAU,CAAC,KAAD,CAAV,CADD,KAGIA,UAAU,CAAC,IAAD,CAAV;AACP,GALD;;AAMA,QAAMM,YAAY,GAAC,MAAI;AACnB,QAAIL,SAAS,CAACG,OAAV,CAAkBC,OAAtB,EACIV,WAAW,CAAC,IAAD,CAAX;AACP,GAHD;;AAIA,QAAMY,cAAc,GAAC,MAAI;AACrBZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAGA,QAAMa,cAAc,GAAEC,CAAD,IAAK;AACtBZ,IAAAA,QAAQ,CAACY,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqBtB,KAAK,CAACuB,CAAN,CAAQC,QAAR,EAArB,EAAwCnB,IAAxC;AACH,GAHD;;AAIA,sBACQ,QAAC,IAAD;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEG,YAAhC;AAA8C,MAAA,OAAO,EAAEI,WAAvD;AAAoE,MAAA,GAAG,EAAEF;AAAzE;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAACP,QAAD,iBACE;AAAM,MAAA,aAAa,EAAEY,YAArB;AAAA,gBAAoCV;AAApC;AAAA;AAAA;AAAA;AAAA,YAHP,EAKKF,QAAQ,iBACL;AAAO,MAAA,QAAQ,EAAEc,cAAjB;AAAiC,MAAA,SAAS,EAAE,IAA5C;AAAkD,MAAA,MAAM,EAAED,cAA1D;AAA0E,MAAA,KAAK,EAAEX;AAAjF;AAAA;AAAA;AAAA;AAAA,YANR,eAQI,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEP;AAAZ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAYH,CA1CD;;GAAMC,K;;KAAAA,K;AA2CN,eAAeA,KAAf","sourcesContent":["import {useState} from \"react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport {FormControl} from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Basket from \"./img/basket.png\"\r\nconst Tasks=(props)=>{\r\n    const Main=styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n      margin: 20px 0px;\r\n      align-items: center;\r\n    `;\r\n\r\n    let [editMode,setEditMode]=useState(false)\r\n    let [task,editTask]=useState(props.name)\r\n    let [check_status,editStatus]=useState(false)\r\n    let checkLink=React.createRef()\r\n\r\n    const checkToggle=()=>{\r\n        if (checkLink.current.checked)\r\n         editStatus(false)\r\n        else\r\n            editStatus(true)\r\n    }\r\n    const activateMode=()=>{\r\n        if (checkLink.current.checked)\r\n            setEditMode(true)\r\n    }\r\n    const deactivateMode=()=>{\r\n        setEditMode(false)\r\n    }\r\n    const onStatusChange=(e)=>{\r\n        editTask(e.currentTarget.value)\r\n        localStorage.setItem(props.k.toString(),task)\r\n    }\r\n    return(\r\n            <Main>\r\n                <input type=\"checkbox\" checked={check_status} onClick={checkToggle} ref={checkLink}></input>\r\n                {!editMode &&\r\n                   <span onDoubleClick={activateMode}>{task}</span>\r\n                }\r\n                {editMode &&\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={task}></input>\r\n                }\r\n                <Image src={Basket}></Image>\r\n            </Main>\r\n    )\r\n}\r\nexport default Tasks"]},"metadata":{},"sourceType":"module"}